function tooltip(text){
//	console.log(text);
	return false;
}

console.log("<%# raw JSON.parse(@h_json_data)['values'].size %>")

var json_data = <%= raw @h_json_data %>
//var json_data = (all_json_data['list_meta'] && all_json_data['list_meta'][0]) ? all_json_data['list_meta'][0] : {};
//console.log(<%# raw @row.to_json %>)
console.log(<%= raw @cmd.to_json %>)
<%# if @row %>
<%# end %>

var plotly_conf = {
		target		: document.getElementById("dr_plot"),
		//file		: "224k_cells.json",
		//file		: "91cells.json",
//		file		: "74689cells.json",
                json            : json_data.values,
		x_json		: 0,
		y_json		: 1,
		text_vector     : json_data.cells || json_data.names,
                quant_vector    : [],
                list_cats       : [],
		x_label		: "Dim <%= session[:dr_params][@project.id][:dim1] || 1 %>",
		y_label		: "Dim <%= session[:dr_params][@project.id][:dim2] || 2 %>",
		c_label		: "label",
		c_list		: "clusters",
		c_value		: "values",
		mode		: "markers",
		color		: "#0000ff",
		size		: (($("#opt_dot_size").length > 0) ? $("#opt_dot_size").val() : <%= session[:dr_params][@project.id][:dot_size] %>),
		opacity		: (($("#opt_dot_opacity").length > 0) ? $("#opt_dot_opacity").val() : <%= session[:dr_params][@project.id][:dot_opacity] %>)
	};


plotly_graph = null;
//loadColoringSelection();
init();

 document.getElementById("dr_plot").on('plotly_deselect', function(data) {
 cancel_selection()  
});

 document.getElementById("dr_plot").on('plotly_click', function(eventData) {
//  console.log("bout")
  if ($("#plot_options_btn").prop("disabled") == false){
  var list_cells = [];
  eventData.points.forEach(function(pt) {
    // console.log(pt);
    list_cells.push(pt.pointNumber);
  });
  if (list_cells.length == 1){
   var html_content = "Clicked cell: <span class='badge badge-light'>" + list_cells[0] + " - " + plotly_graph.data[0].text[list_cells[0]] + "</span>"
  /* for (var i=0; i< plotly_conf.quant_vector.length; i++){
    html_content += "<span class='badge badge-light'>Value " + (i+1) + " = " + plotly_conf.quant_vector[i][list_cells[0]] + "</span>"
   }*/
   $("#clicked_point-desc").html(html_content)
   $("#inspector-tab").click()
   $("#plot_options_btn").click()
  }
  }else{
    alert("Please wait controls finish to load and click again.")
  }
 });

//console.log("bla")
 document.getElementById("dr_plot").on('plotly_selected', function(eventData) {
//console.log("toto")
 if (eventData){
 if ($("#plot_options_btn").prop("disabled") == false){
  //console.log(eventData.points);
  var list_cells = [];
  eventData.points.forEach(function(pt) {
    // console.log(pt);
    list_cells.push(plotly_graph.data[0].ids[pt.pointNumber]);
  });
 // console.log(list_cells);
  if (list_cells.length > 0){
  //  if ($("#plot_options_window").hasClass("hidden")){ 
   $("#selection-actions_container").removeClass("hidden")  
   var disabled = ''
   var html_compl = ''
   if ($("#plot_cell_names_on_hover").prop("checked") == false){
    disabled = "disabled='disabled'"
    html_compl = " <i>To get cell names, check the 'Display cell names' option in <b>General</b></i>"
   }

   var html_content = "<button id='selection-btn' " + disabled + " type='button' class='btn btn-outline-secondary'>Selection <span class='badge badge-light'>" + list_cells.length + " cells</span></button>" + html_compl
  
  if (plotly_graph.data[0].x){
   $("#selection-desc").html(html_content)
  }
//  $("#clicked_point-desc").html(html_content)
  $("#selection-content").val(JSON.stringify(list_cells))	  
  $("#inspector-tab").click()
  $("#plot_options_btn").click()

  
  //  }	 
 // if (list_cells.length > 0){
   p = [
    {name: 'project_key', value: '<%= @project.key %>'},
//    {name: 'annot_id', value: '<%# @annot.id %>'},
    {name: 'list_of_items', value: list_cells.join(";")}
   ];

 //  refresh_post("cart", '<%= selections_path %>', p, 'post');
 // }
  }
  }else{
    alert("Please wait controls finish to load and select again cells.")
  }
  }
});

function init(){
	plotly_graph = new Graph2D(plotly_conf, <%= (current_user) ? current_user.id : 1 %>, <%= raw editable?(@project) %>, <%= raw admin? %>);
	plotly_graph.init();
}

function loadColoringSelection(){
	Plotly.d3.json("geneList.json", function(err, json) {
		json.forEach(function(gene){
			var option = document.createElement("option");
			option.value=gene.id;
			option.innerHTML = gene.label;
			document.getElementById("optgroup2").appendChild(option);
		});
	});
	Plotly.d3.json("clusterGroups.json", function(err, json) {
		json.forEach(function(cluster){
			var option = document.createElement("option");
			option.value=cluster.cluster_id;
			option.innerHTML = cluster.cluster_name;
			document.getElementById("optgroup1").appendChild(option);
		});
	});
}

function coloring(colorType){
	//console.log(colorType.name + ": " +colorType.value);
	if(colorType.value==0){
		plotly_graph.clearColors(true);
		return;
	}

	if(colorType.selectedOptions[0].parentNode.id=="optgroup2"){
		if(plotly_graph.shown==3){
			plotly_graph.clearColors(false);
		}
		plotly_graph.addGeneExpression(colorType.name, colorType.value);
	}

	if(colorType.selectedOptions[0].parentNode.id=="optgroup1"){
		if(plotly_graph.shown==2){
			plotly_graph.clearColors(false);
		}
		plotly_graph.addClusters(colorType.name, colorType.value);
	}
}

