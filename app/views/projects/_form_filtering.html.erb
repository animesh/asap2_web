<div class='alert alert-info'><%= raw Step.find(2).description %></div>

<h2>Filtering options</h2>
<%= form_for(@project, :url => project_path(@project.key), :html => {:id => 'filtering_form'}) do |f| %>
  <% if @project.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@project.errors.count, "error") %> prohibited this project from being saved:</h2>

      <ul>
      <% @project.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<div class='form-group form-inline'>
<%= label_tag 'filter_method_id', "Filter method", {'data-toggle' => 'tooltip', 'title' => ""} %>
<% l = FilterMethod.all.select{|e| @all_results[:parsing]['is_count_table'] == 1 or e.handles_log == true}.map{|e| [e.label, e.id]}.sort %>
<% l.unshift(["None", nil]) %>
<%= f.select :filter_method_id, l, {}, {class: 'form-control'} %>
<% Speed.all.each do |s| %>
<%= image_tag 'speed_' + s.name + '.png', :id => 'speed_' + s.id.to_s, :class => 'speed_image hidden', :width => '25px' %>
<% end %> 
<span id='method_desc' class='label label-info'></span>
<div id='attrs_container'></div>
<!--
<%= label_tag 'delimiter', "Delimiter", {'data-toggle' => "tooltip", 'title' => "Character delimiting the fields in the input text file."} %>
<% l = [['Tabulation', "\t"], ['Space', " "], ['Semicolon', ";"], ['Comma', ',']] %>
<%= select_tag :delimiter, options_for_select(l), {class: 'form-control'}  %>

<%= label_tag 'gene_name_column', "Gene name column" %>
<% l = [['First column', 0], ['None', 'NA'], ['Last column', -1]] %>
<%= select_tag :gene_name_col, options_for_select(l), {class: 'form-control'}  %>

<%= label_tag 'lines_to_skip', "Number of lines to skip" %>
<% l = (1 .. 50).to_a.map{|e| [e, e]} %>
<% l.unshift(['None', '0']) %>
<%= select_tag :skip_line, options_for_select(l, 0), {class: 'form-control'}  %>

<br/>

<%= check_box_tag 'has_header', 1, {:checked => "checked"}  %> 
<%= label_tag 'has_header', "Cell names header is present in line 1", {'data-toggle' => "tooltip", 'title' => "If the cell names header is not present, cell names are generated and contain the column index."} %>
-->
</div>
<%= f.hidden_field :step_id, {:value => 2}  %>

  <div class="actions">
    <% button_name = "Filter" %>
    <%= f.submit button_name, { :class => 'btn btn-primary', :id =>'filtering_button'} %>
    <button id='cancel' type='button', class='btn btn-secondary'>Cancel</button>
  </div>
<% end %>

<%= javascript_tag do %>

$('#filtering_form').unbind('submit');
$('#filtering_form').submit(false);

$("#filtering_button").click(function(){
 var p = $('#filtering_form').serializeArray();
 p.push({'name' : 'render_nothing', 'value' : '1'});
 refresh_post(null, '<%= project_path(@project.key) %>', p, 'post')
});


var h_filter_methods = <%= h ={}; FilterMethod.all.map{|f| h[f.id] = [f.speed_id, f.description, f.link]}; raw h.to_json %>;

$("#project_filter_method_id").change(function(){
 $(".speed_image").addClass('hidden');
 if ($(this).val()){
//  refresh_attributes('filter_method', $(this).val());
  var url = '<%= get_attributes_project_path(:key => @project.key) %>' + '?obj_name=filter_method&obj_id=' + $(this).val();
  refresh("attrs_container", url, {});
  var img = $("#speed_" + h_filter_methods[$(this).val()][0]);
  if (img) {img.removeClass('hidden');}
  $("#method_desc").html(h_filter_methods[$(this).val()][1] + ' ' + h_filter_methods[$(this).val()][2]);
 }else{
  $("#attrs_container").html("");
 }
});

$("#cancel").click(function(){
refresh("step_container", "<%= get_step_project_path(:key => @project.key, :nolayout => 1) %>", {});
});

 var project_filter_method_id = $("#project_filter_method_id").val();
 if (project_filter_method_id){
//  refresh_attributes('filter_method', project_filter_method_id);
  var url = '<%= get_attributes_project_path(:key => @project.key) %>' + '?obj_name=filter_method&obj_id=' + project_filter_method_id;
  refresh("attrs_container", url, {});
  var img = $("#speed_" + h_filter_methods[project_filter_method_id][0])
  if (img) {img.removeClass('hidden');}
  $("#method_desc").html(h_filter_methods[project_filter_method_id][1] + ' ' + h_filter_methods[project_filter_method_id][2]);
 }
<% end %>
