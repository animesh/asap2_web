<%# @h_global_params.to_json %>
<%# @attrs.to_json %>
<%# h_attrs.to_json %>
<% @h_attr_vals ||= {} %>
<%# h_attrs = @h_attrs %>
<%= raw "<div class='form-inline'>" if @form_inline %>

<% @attr_layout.each do |vertical_el| %>

<div class="vert_element row">

<% vertical_el["horiz_elements"].each do |horiz_element| %>

 <div class="horiz_element <%= horiz_element['container_class'] %>">
  <div class="form_card <%= horiz_element['class'] %>">
    <% if horiz_element['card-header'] %>
     <div class="card-header"><%= horiz_element['card-header'] %></div>
    <% end %>
    <div class="card-body">
   <% if  horiz_element['attr_list'] %> 
   <% horiz_element['attr_list'].select{|k| attr = @h_attrs[k]; attr and attr['widget'] and !attr['obsolete']}.each do |attr_name| %>
   <div id='form-container_<%= attr_name %>' class='form-group <%= @div_class || '' %>'>
     <%= render :partial => 'attribute', :locals => {:attr_name => attr_name, :horiz_element => horiz_element} %> 
   </div>
   <% end %>
   <% end %>
  </div>
  </div>
 </div>
<% end %>

</div>

<% end %>


<%= raw @button || '' %>

<%= raw "</div>"  if @form_inline %>

<%= javascript_tag do %>

// var h_attrs = <%= raw @h_attrs.to_json %>

 $('[data-toggle="tooltip"]').tooltip();

$(".std_form_checkbox").click(function(){
 var attr_name = this.id.split("-")[1]
 var checked = $(this).prop("checked")
 $("#attrs_" + attr_name).val((checked) ? 'true' : 'false')
})

function validate_req(){
 var valid_message = ""
 var messages = []
 var valid = true
console.log("blou")
 <% @h_attrs.each_key do |attr_name| %>
  <% attr = @h_attrs[attr_name] %>
  <% if attr['min_nber_items'] %>
   console.log("min_nber_items set for <%= attr_name %>")
   var size = 0  
   if ($("#attrs_<%= attr_name %>").length > 0 ){
   // console.log($("#attrs_<%= attr_name %>").val())
    var l = JSON.parse($("#attrs_<%= attr_name %>").val())
    // console.log(l)
    size = l.length
   }
   if (size < <%= attr['min_nber_items'] %>){
   //  messages.push("There should be at least <%= attr['min_nber_items'] %> item selected")
    console.log("There should be at least <%= attr['min_nber_items'] %> item selected for <%= attr_name %>")
    valid = false
   }else{
//   console.log(size + " - <%= attr['min_nber_items'] %> item selected for <%= attr_name %>")
   }
 <% end %>

 $("#validation_<%= attr_name %>").html(messages.join("<br/>"))
 <% end %>

 if (valid == true){
    console.log("the form is valid!")
   $(".req_submit").removeAttr('disabled')
 }else{
   $(".req_submit").attr("disabled", "disabled")
  console.log("something's wrong")
 }
}

validate_req()

 function get_infos(){
  var infos='';
  if ($("#attrs_nbclust").val() == ''){
   infos += "<span class='label label-info'>Auto clustering will perform a Silhouette analysis with k in [2,20] and pick the best k as the optimal number of clusters</span>"
  }
  return infos
 }

 var infos = get_infos();
 $("#infos").html(infos);

 $("#method_warning").html("<span class='label label-danger'><%= @warning || '' %></span>");

<% if @button %>
$(".replot").click(function(){
var item_id = this.id.split("_")[2];
var p = $('#visualization_form').serializeArray();
p.push({"name" : "dr_id", "value" : item_id});
 refresh_visualisation(item_id);
//refresh_post("visualization_container", "<%= replot_project_path(:key => @project.key) %>", p, 'post');
$('#dr_' + item_id + " img").attr("src", "<%= raw image_url('pending.gif') %>");
$("#step_4 img").attr("src", "<%= raw image_url('pending.gif') %>");
});
<% end %>


<%# end %>
<%# javascript_tag do %>

<% if params[:obj_name] =='cluster_method' %>
/*$("#cluster_cluster_method_id").change(function(){
if ($("#cluster_cluster_method_id").val()!= null){
 upd_attributes();
}
});*/
<% end %>

<% @attrs.select{|attr| attr['widget']}.each do |attr| %>
 <% if attr['condition'] == 'batch_file_exists' %>

  <% if !@batch_file_exists %>   
   $("#attrs_<%= attr_name %>").prop("checked", false );
   $("#attrs_<%= attr_name %>").prop("disabled", true );
  <% else %>
//   $("#attrs_<%= attr_name %>").prop("checked", true );
   $("#attrs_<%= attr_name %>").prop("disabled", false );
  <% end %>
 <% elsif attr['condition'] == 'ercc_file_exists' %>
  <% if !@ercc_file_exists %>
   $("#attrs_<%= attr_name %>").prop("checked", false );
   $("#attrs_<%= attr_name %>").prop("disabled", true );
  <% else %>
   $("#attrs_<%= attr_name %>").prop("checked", true );
   $("#attrs_<%= attr_name %>").prop("disabled", false );
  <% end %>
 <% end %>
<% end %>

$("#attrs_nbclust").change(function(){
var infos = get_infos();
$("#infos").html(infos);
});

function set_group_pairs(){
 if ($("#attrs_all_against_compl").prop("checked")== true){
  // fill group_pairs
  var group_pairs = compute_all_against_compl("#attrs_group_ref option") 
  $("#attrs_group_pairs").val(JSON.stringify(group_pairs)) 
  $("#form-container_group_ref").addClass("hidden")
  $("#form-container_group_comp").addClass("hidden")
 }else{
  $("#attrs_group_pairs").val("[]")
  $("#form-container_group_ref").removeClass("hidden")
  $("#form-container_group_comp").removeClass("hidden")
 }
}

$("#attrs_all_against_compl").click(function(){
set_group_pairs()
})

set_group_pairs()

// add tooltip to disabled checkbox

$('input:disabled').after(function (e) {
    d = $("<div>");
    i = $(this);
    d.css({
        height: i.outerHeight(),
        width: i.outerWidth(),
        position: "absolute",
        cursor: 'no-drop'
    })
    d.css(i.offset());
    d.attr("title", i.attr("data-original-title"));
    d.attr("data-toggle", i.attr("data-toggle"));
    d.tooltip();
    return d;
});

if ($("#edit_project_link").html()){
$("#edit_project_link").click(function(){
refresh("form_container", "<%= edit_project_path(@project.key) %>?global=1", {});
$("#ontop_window").removeClass("hidden");
});
}

<% end %>
