<div class='alert alert-info'><%= raw @step.description %></div>

<%= form_for(@step.obj_name.to_sym, :method => 'post', :html => {:id => @step.obj_name + '_form'}) do |f| %>
  <% if @project.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@project.errors.count, "error") %> prohibited this project from being saved:</h2>
      <ul>
      <% @project.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<div class='form-group form-inline'>
  <%= label_tag 'std_method_id', "Method", {'data-toggle' => 'tooltip', 'title' => ""} %>
  <%# l = StdMethod.where(:step_id => @step_id).all.select{|e| @all_results[:parsing]['is_count_table'] == 1 or e.handles_log == true}.map{|e| [e.label, e.id]}.sort %>
  <%# l = StdMethod.where(:step_id => @step_id).all.map{|e| [e.label, e.id]}.sort %>
  <% l.unshift(["None", nil]) %>
  <%= f.select :std_method_id, l, {}, {class: 'form-control'} %>
  <% Speed.all.each do |s| %>
  <%= image_tag 'speed_' + s.name + '.png', :id => 'speed_' + s.id.to_s, :class => 'speed_image hidden', :width => '25px' %>
  <% end %> 
  <span id='method_desc' class='label label-info'></span>
  <div id='attrs_container'></div>
</div>
<%= f.hidden_field :step_id, {:value => @step_id}  %>

<div class="actions">
  <%# button_name = @step.action_button_name %>
  <%# f.submit button_name, { :class => 'btn btn-primary', :id =>'filtering_button'} %>
  <button id='<%= @step.obj_name %>_button' type='button' class='btn btn-primary'><%= @h_attrs['action_button_label'] || 'Submit' %></button>
  <button id='cancel' type='button' class='btn btn-secondary'>Cancel</button>
</div>
<% end %>

<%= javascript_tag do %>

$('#<%= @step.obj_name %>_form').unbind('submit');
$('#<%= @step.obj_name %>_form').submit(false);

$("#<%= @step.obj_name %>_button").click(function(){
 var p = $('#<%= @step.obj_name %>_form').serializeArray();
 p.push({'name' : 'project_key', 'value' : '<%= @project.key %>'});
/* p.push({'name' : 'render_nothing', 'value' : '1'}); */
 refresh_post('list_<%= @step.obj_name %>', '<%= std_runs_path() %>', p, 'post')
});

var h_methods = <%= h ={}; FilterMethod.all.map{|f| h[f.id] = [f.speed_id, f.description, f.link]}; raw h.to_json %>;

$("#<%= @step.obj_name %>_std_method_id").change(function(){
 $(".speed_image").addClass('hidden');
 if ($(this).val()){
//  refresh_attributes('filter_method', $(this).val());
  var url = '<%= get_attributes_project_path(:key => @project.key) %>' + '?obj_name=<%= @step.obj_name %>&obj_id=' + $(this).val();
  refresh("attrs_container", url, {});
  var img = $("#speed_" + h_filter_methods[$(this).val()][0]);
  if (img) {img.removeClass('hidden');}
  $("#method_desc").html(h_methods[$(this).val()][1] + ' ' + h_methods[$(this).val()][2]);
 }else{
  $("#attrs_container").html("");
 }
});

$("#cancel").click(function(){
refresh("step_container", "<%= get_step_project_path(:key => @project.key, :nolayout => 1) %>", {});
});

 var project_std_method_id = $("#project_std_method_id").val();
 if (project_std_method_id){
//  refresh_attributes('filter_method', project_std_method_id);
  var url = '<%= get_attributes_project_path(:key => @project.key) %>' + '?obj_name=<%= @step.obj_name %>&obj_id=' + project_std_method_id;
  refresh("attrs_container", url, {});
  var img = $("#speed_" + h_methods[project_std_method_id][0])
  if (img) {img.removeClass('hidden');}
  $("#method_desc").html(h_std_methods[project_std_method_id][1] + ' ' + h_methods[project_std_method_id][2]);
 }
<% end %>
