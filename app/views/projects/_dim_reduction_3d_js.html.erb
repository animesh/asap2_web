// <%= @cmd %>
 var json_data = <%= raw @h_json_data %>
//var all_json_data = <%# raw @h_json_data %>
//var json_data = (all_json_data['list_meta'] && all_json_data['list_meta'][0]) ? all_json_data['list_meta'][0] : {};


var plotly_conf = {
		target		: document.getElementById("dr_plot"),
		//file		: "224k_cells.json",
		//file		: "91cells.json",
		file		: "74689cells.json",
                json            : json_data.values,										    
		x_json		: 0,
		y_json		: 1,
		z_json		: 2,
		text		: "text",
                text_vector     : json_data.cells || json_data.names,
                quant_vector    : [],
//                mem_colors      : json_data.values[0].marker.color,                
                list_cats       : [],
		x_label		: "Dim <%= session[:dr_params][@project.id][:dim1] || 1 %>",
		y_label		: "Dim <%= session[:dr_params][@project.id][:dim2] || 2 %>",
		z_label		: "Dim <%= session[:dr_params][@project.id][:dim3] || 3 %>",
		c_label		: "label",
		c_list		: "clusters",
		c_value		: "values",
		mode		: "markers",
		color		: "#0000ff" ,
                size            : (($("#opt_dot_size").length > 0) ? $("#opt_dot_size").val() : <%= session[:dr_params][@project.id][:dot_size] %>),
                opacity         : (($("#opt_dot_opacity").length > 0) ? $("#opt_dot_opacity").val() : <%= session[:dr_params][@project.id][:dot_opacity] %>)
	};

plotly_graph = null;
//loadColoringSelection();
init();

function init(){
	plotly_graph = new Graph3D(plotly_conf, <%= (current_user) ? current_user.id : 1 %>, <%= editable?(@project) %>, <%= raw admin? %>);
	plotly_graph.init();
}


function loadColoringSelection(){
	Plotly.d3.json("geneList.json", function(err, json) {
		json.forEach(function(gene){
			var option = document.createElement("option");
			option.value=gene.id;
			option.innerHTML = gene.label;
			document.getElementById("optgroup2").appendChild(option);
		});
	});
	Plotly.d3.json("clusterGroups.json", function(err, json) {
		json.forEach(function(cluster){
			var option = document.createElement("option");
			option.value=cluster.cluster_id;
			option.innerHTML = cluster.cluster_name;
			document.getElementById("optgroup1").appendChild(option);
		});
	});	
}


function coloring(colorType){
	//console.log(colorType.name + ": " +colorType.value);
	if(colorType.value==0){
		plotly_graph.clearColors(true);
		return;
	}

	if(colorType.selectedOptions[0].parentNode.id=="optgroup2"){
		if(plotly_graph.shown==3){
			plotly_graph.clearColors(false);
		}
		plotly_graph.addGeneExpression(colorType.name, colorType.value);	
	}
	
	if(colorType.selectedOptions[0].parentNode.id=="optgroup1"){
		if(plotly_graph.shown==2){
			plotly_graph.clearColors(false);
		}
		plotly_graph.addClusters(colorType.name, colorType.value);	
	}
}



