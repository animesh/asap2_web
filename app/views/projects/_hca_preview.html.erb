<%# @h_hca.to_json %>
<%# @h_filters.to_json %>
<%# raw @h_urls[:projects] %>
<%# @log %>
<%# @h_hca[:summary].keys %>
<%# @h_hca.to_json %>
<%# @h_urls.to_json %>
<%# @h_hca[:projects]['hits'][0]['projects'].to_json %>
<%= @sum_matrices[0].to_json %>
<% if @h_hca[:projects]['termFacets'] %>
<%# @errors.to_json %> 
<!--<div class='alert alert-danger'><i class='fas fa-exclamation-triangle warning-ico fa-3x'/> The HCA data are currently not available. There is a data re-ingestion process ongoing.</div>-->

<div class="row">
  <div class="col">
    <input id='search' type="text" class="form-control" placeholder="Search">
  </div>
  <div class="col">
    <% discarded_facets = ['fileFormat'] %>
    <% displayed_facets = ['organ', 'method', 'donor', 'specimen'] %>

  </div>
</div>
<div id='list_filters'>
<%#  @h_filters['fileFormat'].to_json %>
</div>

<div id='container_choices' class='hidden'>
</div>

<%# @h_hca[:projects]['termFacets']['project']['terms'].to_json %>
<% if @h_hca[:projects]['hits'].size < @h_hca[:projects]['termFacets']['project']['terms'].size %>
<div class='alert alert-warning'>
  Total number of projects (<%= @h_hca[:projects]['termFacets']['project']['terms'].size %>) exceeding maximum number of hits displayed (<%= @nber_hits_displayed %>), please add filters.
</div>
<% end %>

<%# @h_hca[:projects]['hits'].map{|e| e['projects'].map{|e2| e2.keys}}.to_json #"arrayExpressAccessions","geoSeriesAccessions","insdcProjectAccessions","insdcStudyAccessions","supplementaryLinks" %>

<div id='container_list_projects'>
<table id='list_projects'>
<thead><tr>
<!--    <th>--><!--<input type="checkbox" name="select_all" value="1" id="example-select-all"><%# check_box_tag "hca_select_all", "1", false %>--><!--</th>-->
    <th>Project</th>
    <th>Species</th>
<!--    <th>Organ</th>
    <th>Organ part</th>-->
    <th>Disease</th>
    <!--    <th>Donor count</th> -->
<!--    <th>Cell origin</th>-->
    <th>Loom files</th>
    <th>Total number cells</th>
    <!--    <th>Library construction approach</th>
    <th>Machine</th> -->
    <th></th>
</tr></thead>
<tbody>
<% h_titles = {} %>
<% if @h_hca and @h_hca[:projects] %>
<% @h_hca[:projects]['hits'].each_index do |i| %>
<% e = @h_hca[:projects]['hits'][i] %>
<% pp = ProviderProject.where(:provider_id => 1, :key => e["entryId"]).first %>
<% total_cells = 0 %>
<% cell_details = e['cellSuspensions'].map{|e2| 
   total_cells += e2['totalCells'].to_i || 0; 
   "<span class='badge badge-secondary'>" + ["organ", "organPart", "selectedCellType"].map{|k| (e2[k].is_a? Array) ? e2[k].join(" / ") : e2[k]}.compact.reject{|e3| e3.strip.empty?}.join(" > ") + 
   " : " + 
   number_with_delimiter((e2['totalCells'] || 0), :delimiter => "'") + 
   " cells</span>"
}.join(" ") %>
<%# if total_cells > 0 %>
<tr>
<!--  <td><%= check_box_tag "hca-hit_#{i}", e['entryId'], false, {:class=> 'hca-hit'} %><%# e['projects'].size %></td> -->
<td><%= title = e['projects'].map{|e2| e2['projectTitle']}.join(", "); h_titles[e["entryId"]]= title; link_to title, "https://data.humancellatlas.org/explore/projects/" + e["entryId"] %></td>
<td><%= e['donorOrganisms'].map{|e2| e2['genusSpecies']}.flatten.join(", ") %><%# (e['projectSummary']['genusSpecies']) ? e['projectSummary']['genusSpecies'].join(", ") : 'NA' %></td>
<!--<td><%= e['specimens'].map{|e2| e2['organ']}.flatten.join(", ") %></td>
<td><%= e['specimens'].map{|e2| e2['organPart']}.flatten.join(", ") %></td> -->
<td><%= e['specimens'].map{|e2| e2['disease']}.flatten.join(", ") %></td>
<!--<td><%= raw cell_details %>-->
  <%# e.keys.to_json %>
  <%# e['fileTypeSummaries'].select{|e| e['fileType'] == 'matrix'}.first['count'].to_json %>
</td>
<td>
  <% @sum_matrices[i].each_key do |uuid| %>
  <% if m = @sum_matrices[i][uuid][:url].match(/\/([\d\w+\-_]*)\?/) %>
    <% file_key = e["entryId"] + ";" + m[1] + ";" + @sum_matrices[i][uuid][:name] + ";" + @sum_matrices[i][uuid][:url] %>  
  <% end %>
  <p>
    <%= radio_button_tag 'hca_loom_file', file_key, {}, {:disabled => pp.not_add_in_asap} %> 
    <b><%= link_to @sum_matrices[i][uuid][:name], @sum_matrices[i][uuid][:url] %></b>
    <% if pp.comment %>
  <p class='text-<%= (pp.not_add_in_asap) ? 'danger' : 'success' %>'><%= pp.comment %></p>
  <% end %>  
    [<%= raw @sum_matrices[i][uuid][:species].join(", ") %>] [<%= raw @sum_matrices[i][uuid][:organs].join(", ") %>] [<%= raw @sum_matrices[i][uuid][:development_stages].join(", ") %>] [<%= raw @sum_matrices[i][uuid][:approaches].join(", ") %>]
  </p>
  <% end %>
  <!-- <pre><%= e.to_json %></pre> -->
  
  <%# if ma = e.to_json.to_s.match(/(ca4613fa-6dd5-5757-bdc3-71b84b9cb9e9)/) %>
  <%# ma[1].to_json %>
  <%# end %>
</td>
<td><span class='total_nber_cells'>
      <%= number_with_delimiter(total_cells, :delimiter => "'") %>
  </span></td>

<td><%= (pp) ? link_to("Edit", edit_provider_project_path(pp.id), {"target" => "_blank"}) : '' %></td>
</tr>
<%# end %>
<% end %>
<% end %>

</tbody>
</table>

<%= javascript_tag do %>

 var h_q = JSON.parse($("#hca_query").val());
 var h_hca = <%= raw @h_hca.to_json %>;
 var h_titles = <%= raw h_titles.to_json %>;

 var table = $("#list_projects").DataTable({
        'columnDefs': [{
         'targets': 0,
         'searchable': false,
         'orderable': false,
         'className': 'dt-body-center'
      /*   'render': function (data, type, full, meta){
             return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
         }*/
      }],
  "order": [[1, 'asc']],
  "dom": '<"top"i>rt<"bottom"lp><"clear">'
});

$("#list_projects").on("click", ".hca-hit", function(){
 $(".hca-hit").prop('checked', false)
 $(this).prop("checked", true) 
 $("#provider_project_id").val($(this).val())
 $("#provider_project_title").val(h_titles[$(this).val()])
 $("#provider_id").val("1")
// console.log($(this).parent())
// if ($("#project_name").val() == ''){
//  var project_name = $(this).parent().parent().children()[1].innerHTML
//  $("#project_name").val(project_name)
// }
})

$("#list_projects").on("click", 'input[name="hca_loom_file"]', function(){
var url = $('input[name="hca_loom_file"]:checked').val()
// $(".hca-hit").prop('checked', false)
// $(this).prop("checked", true)
 var t = $(this).val().split(";")
 $("#provider_project_id").val(t[0])
 $("#provider_project_filekey").val(t[1])
 $("#provider_project_filename").val(t[2])     
 $("#provider_project_fileurl").val(t[3])     
 $("#provider_project_title").val(h_titles[t[0]])
 $("#provider_id").val("1")
 validate_form()
})


function get_sel_hca_projects(){
 let flag = true
 let h_post_query = h_q
 h_post_query.project = {is : []}
 table.$('input[type="checkbox"]').each(function(){
         // If checkbox is checked
         if(this.checked){
            let i = this.id.split("_")[1]
      //          list_projects.push(h_hca.projects.hits[i].projects[0].projectShortname)
            let project_name = h_hca.projects.hits[i].projects[0].projectShortname
            //console.log("P: " + project_name)
           h_post_query.project.is.push(project_name)
         }
    })
// $("#sel_provider_projects").val(JSON.stringify(h_post_query))
 validate_form()
// return JSON.stringify(h_post_query)
}

function all_checked(){
 let flag = true
 table.$('input[type="checkbox"]').each(function(){
         // If checkbox is checked
         if(!this.checked){
          flag=false
         }
    })
   return flag
}

  // Handle click on checkbox to set state of "Select all" control
   $('#list_projects tbody').on('change', 'input[type="checkbox"]', function(){
      var el = $('#example-select-all').get(0);
      // If checkbox is not checked
      if(!this.checked){
         // If "Select all" control is checked and has 'indeterminate' property
         if(el && el.checked && ('indeterminate' in el)){
            // Set visual state of "Select all" control
            // as 'indeterminate'
            el.indeterminate = true;
         }
      }else{ if(all_checked() == true){
         el.indeterminate = false;
      }}
      get_sel_hca_projects()
   });

$(".hca_filter_badge").click(function(){
var c = $(this).html()
var k = c.split(": ")[0]
delete h_q.file[k]
//console.log("bla")
//console.log(h_q)
 $("#hca_query").val(JSON.stringify(h_q))
 upd_hca_preview()
})

$(function() {
 var data = [];
 var list_facets = <%= raw (@h_hca[:projects]['termFacets'].keys - discarded_facets).sort.to_json %>
 for (var i=0; i< list_facets.length; i++){
  var tmp_l = h_hca.projects.termFacets[list_facets[i]].terms
  for (var j = 0; j < tmp_l.length; j++){
   data.push({label: tmp_l[j].term, n: tmp_l[j].count, c: list_facets[i] }) //capitalize(list_facets[i].replace(/([A-Z])/g, " $1"))})
  }
 }

 $( "#search" ).catcomplete({
  delay: 0,
  source: data
 });

$('.ui-autocomplete').on('click', '.ui-menu-item', function(){
 //alert($(this).attr("aria-label"))
 var t = $(this).attr("aria-label").split("|")
 var values = (h_q.file[t[0]] && h_q.file[t[0]].is) ? h_q.file[t[0]].is : [];
 if($.inArray(t[1], values) == -1){
  values.push(t[1])
  console.log(t[1])
  console.log(values)
 }else{
  console.log("val: " + t[1] +  " in " + values.length)

 }
 h_q.file[t[0]] = {is : values}
 console.log(h_q)
 $("#hca_query").val(JSON.stringify(h_q))
 upd_hca_preview()
});

});

<% end %>

<% end %>



