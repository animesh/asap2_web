<%# @h_hca.to_json %>
<%# @h_filters.to_json %>
<%# @h_urls.to_json %>
<%# @log %>
<%# @h_hca[:summary].keys %>
<%# @h_hca[:projects].keys %>
<% if @h_hca[:projects]['termFacets'] %>

<div class="row">
  <div class="col">
    <input id='search' type="text" class="form-control" placeholder="Search">
  </div>
  <div class="col">
    <% discarded_facets = ['fileFormat'] %>
    <% displayed_facets = ['organ', 'method', 'donor', 'specimen'] %>
    
    <% displayed_facets.each do |facet| %>
    <button type="button" class="btn btn-outline-secondary">
      <%= facet.gsub(/(?<=[a-z])(?=[A-Z])/, ' ').capitalize %>
    </button>
    <% end %>
    <% remaining_facets = @h_hca[:projects]['termFacets'].keys - displayed_facets - discarded_facets %>
    
    <div class="btn-group" role="group">
      <button id="btnGroupDrop1" type="button" class="btn btn-outline-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
	Others
      </button>
      <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
	<% remaining_facets.sort.each do |facet| %>
	 <a class="dropdown-item" href="#">
	  <%= facet.gsub(/(?<=[a-z])(?=[A-Z])/, " ").capitalize %>
 	 </a>
  	<% end %>
      </div>
    </div>
  </div>
</div>
<div id='list_filters'>
<% @h_filters['file'].each_key do |k| %>
<span class='badge badge-light hca_filter_badge'><%= k %>: <%= @h_filters['file'][k]['is'].map{|e| e}.sort.join(",") %>
<% if k != 'fileFormat' %>
<i class='fa fa-times'/>
<% end %>
</span>
<% end %>
</div>

<div id='container_choices' class='hidden'>
</div>

<%# @h_hca[:projects]['termFacets']['project']['terms'].to_json %>
<% if @h_hca[:projects]['hits'].size < @h_hca[:projects]['termFacets']['project']['terms'].size %>
<div class='alert alert-warning'>
  Total number of projects (<%= @h_hca[:projects]['termFacets']['project']['terms'].size %>) exceeding maximum number of hits displayed (<%= @nber_hits_displayed %>), please add filters.
</div>
<% end %>
<!--
<button id='hca_select_all' type='button' class='btn btn-secondary'>Select all</button>
<button id='hca_deselect_all' type='button' class='btn btn-secondary'>Deselect all</button>
-->
<div id='container_list_projects'>
<table id='list_projects'>
<thead><tr>
    <th><input type="checkbox" name="select_all" value="1" id="example-select-all"><%# check_box_tag "hca_select_all", "1", false %></th>
    <th>Project</th>
    <th>Species</th>
    <th>Organ</th>
    <th>Organ part</th>
    <th>Disease</th>
    <th>Donor count</th>
    <th>Cell count</th>
    <th>Library construction approach</th>
    <th>Machine</th>
</tr></thead>
<tbody>
<%  @h_hca[:projects]['hits'].each_index do |i| %>
<% e = @h_hca[:projects]['hits'][i] %>
<tr>
  <th><%= check_box_tag "hca-hit_#{i}", "1", false, {:class=> 'hca-hit'} %></th>
  <td><%= e['projects'].map{|e2| e2['projectTitle']}.join(", ") %></td>
  <td><%= e['specimens'].map{|e2| e2['genusSpecies'].join(", ")}.join(", ") %></td>
  <td><%= e['specimens'].map{|e2| e2['organ'].join(", ")}.join(", ") %></td>
  <td><%= e['specimens'].map{|e2| e2['organPart'].join(", ")}.join(", ") %></td>
  <td><%= e['specimens'].map{|e2| e2['disease'].join(", ")}.join(", ") %></td>
  <td><%= e['projectSummary']['donorCount'].to_i %></td>
  <td><%= (nb_cells = e['projectSummary']['totalCellCount'].to_i and nb_cells > 0) ? nb_cells : 'NA' %></td>
  <td><%= e['projectSummary']['libraryConstructionApproach'].join(", ") %></td>
  <td><%= e['protocols'].map{|e2| e2['instrumentManufacturerModel'] && e2['instrumentManufacturerModel'].join(", ")}.compact.join(", ") %></td>
</tr>
<% end %>
</tbody>
</table>
</div>

<%= javascript_tag do %>

 var h_q = JSON.parse($("#hca_query").val());
 var h_hca = <%= raw @h_hca.to_json %>;

var table = $("#list_projects").DataTable({
'columnDefs': [{
         'targets': 0,
         'searchable': false,
         'orderable': false,
         'className': 'dt-body-center'
      /*   'render': function (data, type, full, meta){
             return '<input type="checkbox" name="id[]" value="' + $('<div/>').text(data).html() + '">';
         }*/
      }],
  "order": [[1, 'asc']],
  "dom": '<"top"i>rt<"bottom"lp><"clear">'
});

function get_sel_hca_projects(){
 let flag = true
 let h_post_query = h_q 
 h_post_query.file.project = {is : []}
 table.$('input[type="checkbox"]').each(function(){
         // If checkbox is checked
         if(this.checked){
            let i = this.id.split("_")[1]
      //          list_projects.push(h_hca.projects.hits[i].projects[0].projectShortname)
            let project_name = h_hca.projects.hits[i].projects[0].projectShortname
            //console.log("P: " + project_name)
           h_post_query.file.project.is.push(project_name)
         }
    })
 $("#sel_hca_projects").val(JSON.stringify(h_post_query))
 validate_form()
// return JSON.stringify(h_post_query)
}

function all_checked(){
 let flag = true
 table.$('input[type="checkbox"]').each(function(){
         // If checkbox is checked
         if(!this.checked){
          flag=false
         }
    })
   return flag
}

// Handle click on "Select all" control
   $('#example-select-all').on('click', function(){
      // Get all rows with search applied
      var rows = table.rows({ 'search': 'applied' }).nodes();
      // Check/uncheck checkboxes for all rows in the table
      $('input[type="checkbox"]', rows).prop('checked', this.checked);
      get_sel_hca_projects()
   });

   // Handle click on checkbox to set state of "Select all" control
   $('#list_projects tbody').on('change', 'input[type="checkbox"]', function(){
      var el = $('#example-select-all').get(0);
      // If checkbox is not checked
      if(!this.checked){
         // If "Select all" control is checked and has 'indeterminate' property
         if(el && el.checked && ('indeterminate' in el)){
            // Set visual state of "Select all" control
            // as 'indeterminate'
            el.indeterminate = true;
         }
      }else{ if(all_checked() == true){
         el.indeterminate = false;         
      }}
      get_sel_hca_projects()
   });




/*
hca_projects.on("click", "#hca_select_all", function(){
 let l = h_hca.projects.hits
 alert(l.length)
 for(i=0; i< l.length; i++){
  $("#hca-hit_" + i).prop("checked", "checked")
  $("#hca-hit_" + i).checked = true
 }

$('input', hca_projects.cells().nodes()).prop('checked',true); 
})

$("#hca_deselect_all").click(function(){
 let l = h_hca.projects.hits
 for(i=0; i< l.length; i++){
  $("#hca-hit_" + i).checked = false
 }
})
*/
$(".hca_filter_badge").click(function(){
var c = $(this).html()
var k = c.split(": ")[0]
delete h_q.file[k]
console.log("bla")
console.log(h_q) 
 $("#hca_query").val(JSON.stringify(h_q))
 upd_hca_preview()
})

$(function() {
 var data = [];
 var list_facets = <%= raw (@h_hca[:projects]['termFacets'].keys - discarded_facets).sort.to_json %>
 for (var i=0; i< list_facets.length; i++){
  var tmp_l = h_hca.projects.termFacets[list_facets[i]].terms
  for (var j = 0; j < tmp_l.length; j++){ 
   data.push({label: tmp_l[j].term, n: tmp_l[j].count, c: list_facets[i] }) //capitalize(list_facets[i].replace(/([A-Z])/g, " $1"))})
  }
 }

 $( "#search" ).catcomplete({
  delay: 0,
  source: data
 });


$('.ui-autocomplete').on('click', '.ui-menu-item', function(){
 //alert($(this).attr("aria-label"))
 var t = $(this).attr("aria-label").split("|")
 var values = (h_q.file[t[0]] && h_q.file[t[0]].is) ? h_q.file[t[0]].is : [];
 if($.inArray(t[1], values) == -1){
  values.push(t[1]) 
  console.log(t[1])
  console.log(values)		    
 }else{
  console.log("val: " + t[1] +  " in " + values.length)
  
 }
 h_q.file[t[0]] = {is : values}
 console.log(h_q)
 $("#hca_query").val(JSON.stringify(h_q))		      
 upd_hca_preview()
});

});

<% end %>

<% end %>

