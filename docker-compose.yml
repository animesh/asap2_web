version: '2'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
       - ./nginx.conf:/etc/nginx/nginx.conf
       - /etc/pki/tls/certs/asap.epfl.ch.pem:/etc/nginx/asap.epfl.ch.pem
       - /etc/pki/tls/private/asap.epfl.ch.key:/etc/nginx/asap.epfl.ch.key
       - /etc/pki/tls/certs/asap-beta.epfl.ch.pem:/etc/nginx/asap-beta.epfl.ch.pem
       - /etc/pki/tls/private/asap-beta.epfl.ch.key:/etc/nginx/asap-beta.epfl.ch.key
       - '/data/asap2/:/data/asap2'       
    links:
      - website
    ports:
      - 80:80
      - 443:443
      - 28081:28081
    networks:
       - asap_network

  postgres:
    image: 'postgres:10.3-alpine'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
      - 'dumps:/dumps'
    command: -p 5434
    env_file:
      - '.env'
    ports:
      - '5433:5434'
    expose:
      - "5434"
    networks:
       - asap_network
#:
#        ipv4_address: 172.19.0.2

  redis:
    image: 'redis:4.0-alpine'
    command: redis-server --requirepass yourpassword
    volumes:
      - 'redis:/data'
    networks:
      - asap_network
#:
#       ipv4_address: 172.19.0.3

  website:
    depends_on:
      - 'postgres'
      - 'redis'
    build: .
    ports:
      - '3000:3000'
    volumes:
      - '.:/app'
      - 'dumps:/dumps'
      - '/data/asap2/:/data/asap2'
      - '/srv/asap_run:/srv/asap_run'
      - '/var/run/docker.sock:/var/run/docker.sock'
    env_file:
      - '.env_website'
    networks:
       - asap_network


  sidekiq:
    depends_on:
      - 'postgres'
      - 'redis'
    build: .
    command: sidekiq -C config/sidekiq.yml.erb
    volumes:
      - '.:/app'
    env_file:
      - '.env'
    networks:
      - asap_network
#:
 #      ipv4_address: 172.19.0.5

  cable:
    depends_on:
      - 'redis'
    build: .
    command: puma -p 28080 cable/config.ru
    ports:
      - '28080:28080'
    volumes:
      - '.:/app'
    env_file:
      - '.env'
    networks:
      - asap_network
#:
 #      ipv4_address: 172.19.0.6

networks:
   asap_network:
    driver: bridge
 #   driver_opts:
 #     com.docker.network.enable_ipv6: "false"
 #   ipam:
 #     driver: default
 #     config:
 #     - subnet: 172.19.0.0/24
 #       gateway: 172.19.0.1

volumes:
  dumps:
#  data:
  redis:
  postgres:
  
